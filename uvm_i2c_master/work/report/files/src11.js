var g_data = {"name":"../rtl/8bit_to_1byte.v","src":"module BitToByteConverter \n    (\n        input wire i2c_clk,      // Clock signal\n        input wire rst_n,    // Active-low reset signal\n        input wire in,       // 1-bit input\n        input wire enable,   // Enable signal\n        output reg [7:0] out  // 8-bit output\n    );\n\n    reg [3:0]   counter;\n    reg [7:0]   tmp;\n\n    always @(posedge i2c_clk or negedge rst_n) begin\n        if (!rst_n) begin\n            counter <= 0;\n        end\n        else begin\n            if(enable)\n                counter <= counter + 1;\n            if (counter == 7)\n                counter <= 0;\n        end\n    end\n\n    always @(posedge i2c_clk or negedge rst_n) begin\n        if (!rst_n) begin\n            tmp <= 8'b00000000;  // Reset to 0 when reset is active\n        end else begin\n            if (enable) begin\n                tmp <= {tmp[6:0], in};  // Shift the existing bits and append the new input bit\n                if ((counter == 0) && (tmp != 0))\n                    out <= tmp;\n            end\n        end\n    end\nendmodule","lang":"verilog"};
processSrcData(g_data);